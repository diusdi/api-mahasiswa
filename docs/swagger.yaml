basePath: /
definitions:
  models.Hobi:
    properties:
      id:
        example: 1
        type: integer
      nama_hobi:
        example: berenang
        type: string
    type: object
  models.Mahasiswa:
    properties:
      gender:
        example: "1"
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: "1"
        type: string
      nama:
        example: Dion
        type: string
      tanggal_registrasi:
        example: "2020-01-02T15:04:05Z"
        type: string
      usia:
        example: 21
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API untuk mengatur data mahasiswa Jobhun. Untuk source code dapat dilihat
    di https://github.com/diusdi/api-mahasiswa
  license:
    name: Licensi MIT
    url: https://opensource.org/licenses/MIT
  title: API Mahasiswa
  version: "1.0"
paths:
  /mhs:
    get:
      operationId: read-mahasiswa
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: menampilkan semua data mahasiswa
    post:
      operationId: create-mahasiswa
      parameters:
      - description: 'Data yang bisa ditambahkan : nama, usia, gender (''0'' untuk
          perempuan dan ''1'' untuk laki-laki)'
        in: body
        name: mahasiswa
        required: true
        schema:
          $ref: '#/definitions/models.Mahasiswa'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: menambahkan data mahasiswa baru
  /mhs/{id}:
    delete:
      operationId: delete-mahasiswa
      parameters:
      - description: Id mahasiswa
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: menghapus data mahasiswa
    get:
      operationId: read-mahasiswa-by-id
      parameters:
      - description: Id mahasiswa
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: menampilkan data mahasiswa berdasarkan id
    put:
      operationId: update-mahasiswa
      parameters:
      - description: Id mahasiswa
        in: path
        name: id
        required: true
        type: integer
      - description: 'Data yang bisa diupdate : nama, usia, gender (''0'' untuk perempuan
          dan ''1'' untuk laki-laki)'
        in: body
        name: mahasiswa
        required: true
        schema:
          $ref: '#/definitions/models.Mahasiswa'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: update data mahasiswa
  /mhs/hobi:
    get:
      operationId: read-hobi
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: menampilkan semua data hobi
      tags:
      - Mengelola data hobi
    post:
      operationId: create-hobi
      parameters:
      - description: 'Data yang bisa ditambahkan : nama hobi'
        in: body
        name: hobi
        required: true
        schema:
          $ref: '#/definitions/models.Hobi'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: menambahkan data hobi baru
      tags:
      - Mengelola data hobi
swagger: "2.0"
